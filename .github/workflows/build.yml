name: Build

on:
  push:
    branches:
      - master
      - develop
    tags:
      - 'v*'
    paths-ignore:
      - '.idea/**'
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - '.idea/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v2

        # Robolectric needs Java 9+ to run tests with Android 10. On Java 12+, it fails.
        # JDK 11 has fixes for Room. See https://bugs.openjdk.java.net/browse/JDK-8007720
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - name: Copy CI gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Restore Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradlecache-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradlecache-

      - name: Restore Gradle dist cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradledist-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradledist-

      - name: Restore robolectric cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository/org/robolectric/android-all
          key: ${{ runner.os }}-robolectric-${{ hashFiles('test-shared/src/main/resources/robolectric.properties') }}
          restore-keys: |
            ${{ runner.os }}-robolectric-

      - name: Generate build number
        uses: einaregilsson/build-number@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Setup release environment
        if: success() && startsWith(github.ref, 'refs/tags/v')
        env:
          RELEASE_KEYSTORE_KEY: ${{ secrets.RELEASE_KEYSTORE_KEY }}
          RELEASE_KEYSTORE_IV: ${{ secrets.RELEASE_KEYSTORE_IV }}
        run: ./release/secrets-setup.sh

      - name: Build
        env:
          ORG_GRADLE_PROJECT_SIGN_STORE_PASSWORD: ${{ secrets.SIGN_STORE_PASSWORD }}
          ORG_GRADLE_PROJECT_SIGN_KEY_ALIAS: ${{ secrets.SIGN_KEY_ALIAS }}
          ORG_GRADLE_PROJECT_SIGN_KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}
        run: >
          ./gradlew spotlessCheck dependencyUpdates app:lintDebug testDebugUnitTest
          jacocoTestReportDebug app:assembleDebug app:assembleRelease app:bundleRelease
          -Papp.versionName=$(echo ${{ github.ref }} | awk -F/ '{ print $NF }')
          -Papp.versionCode=$BUILD_NUMBER --stacktrace

      - name: Clean secrets
        if: always()
        run: ./release/secrets-teardown.sh

      - name: Encrypt mapping
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          MAPPING_PASSPHRASE: ${{ secrets.MAPPING_PASSPHRASE }}
        run: release/mapping-archivator.sh

      - name: Upload build outputs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-reports
          path: app/build/reports

      - name: Upload dependency updates report
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: dependency-updates
          path: build/dependencyUpdates

      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: junit-results
          path: junit

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v1
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: Create draft release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
